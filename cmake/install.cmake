
set(LIBDIR ${CMAKE_INSTALL_PREFIX}/lib)

set(SIGCPP_SITE_PACKAGE_DIR         ${Python3_SITELIB})
set(SIGCPP_CMAKE_CONFIG_DIR         "${CMAKE_CURRENT_BINARY_DIR}")
set(CMAKE_CURRENT_LIST_DIR ${CMAKE_CURRENT_BINARY_DIR})
set(SIGCPP_TARGET_NAMES               sigc-2.0)
set(SIGCPP_CONFIG_INSTALL_DIR        "${LIBDIR}/cmake/SigC++" CACHE INTERNAL "")
set(SIGCPP_INCLUDE_INSTALL_DIR       "${LIBDIR}/SigC++/include")
set(SIGCPP_LIBRARY_INSTALL_DIR       "${LIBDIR}/SigC++")
set(SIGCPP_TARGETS_EXPORT_NAME       "SigC++Targets")
set(SIGCPP_CMAKE_CONFIG_TEMPLATE     "${PROJECT_SOURCE_DIR}/cmake/Config.cmake.in")
set(SIGCPP_CMAKE_VERSION_CONFIG_FILE "${SIGCPP_CMAKE_CONFIG_DIR}/SigC++ConfigVersion.cmake")
set(SIGCPP_CMAKE_PROJECT_CONFIG_FILE "${SIGCPP_CMAKE_CONFIG_DIR}/SigC++Config.cmake")
set(lcase_SIGCPP_CMAKE_PROJECT_CONFIG_FILE "${SIGCPP_CMAKE_CONFIG_DIR}/sigc++Config.cmake")
set(SIGCPP_CMAKE_PROJECT_TARGETS_FILE "${SIGCPP_CMAKE_CONFIG_DIR}/SigC++Targets.cmake")
configure_file(
    "${PROJECT_SOURCE_DIR}/cmake/SigC++ConfigVersion.cmake.in"
    ${SIGCPP_CMAKE_VERSION_CONFIG_FILE}
    @ONLY
)


configure_file(${SIGCPP_CMAKE_CONFIG_TEMPLATE} ${SIGCPP_CMAKE_PROJECT_CONFIG_FILE} @ONLY)
configure_file(${SIGCPP_CMAKE_CONFIG_TEMPLATE} ${lcase_SIGCPP_CMAKE_PROJECT_CONFIG_FILE} @ONLY)



install(
    DIRECTORY ${SIGCPP_INCLUDE_BUILD_DIR}
    DESTINATION ${SIGCPP_INCLUDE_INSTALL_DIR}
)
install(
    FILES ${SIGCPP_CMAKE_PROJECT_CONFIG_FILE} ${SIGCPP_CMAKE_VERSION_CONFIG_FILE}
    DESTINATION ${SIGCPP_CONFIG_INSTALL_DIR}
)
install(
    FILES ${lcase_SIGCPP_CMAKE_PROJECT_CONFIG_FILE}
    DESTINATION ${SIGCPP_CONFIG_INSTALL_DIR}
)
export(
    TARGETS  sigc-2.0
    FILE ${SIGCPP_CMAKE_PROJECT_TARGETS_FILE}
)
install(TARGETS sigc-2.0 RUNTIME DESTINATION bin ARCHIVE DESTINATION lib)
install(FILES ${HEADERS}  DESTINATION ${SIGCPP_INCLUDE_INSTALL_DIR})
install(FILES ${CMAKE_BINARY_DIR}/sigc++config.h  DESTINATION ${SIGCPP_LIBRARY_INSTALL_DIR}/include)
install(
    TARGETS sigc-2.0
    EXPORT ${SIGCPP_TARGETS_EXPORT_NAME}
    INCLUDES DESTINATION ${SIGCPP_INCLUDE_INSTALL_DIR}
    LIBRARY DESTINATION ${SIGCPP_LIBRARY_INSTALL_DIR}
)



install(
    EXPORT ${SIGCPP_TARGETS_EXPORT_NAME}
    # NAMESPACE SigC++::
    DESTINATION ${SIGCPP_CONFIG_INSTALL_DIR}
)




